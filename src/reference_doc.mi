_{include inc/slideit.mi  }_
_{include inc/style.mi     }_
_{include inc/fonts.mi     }_

[style: scoped]
.theme1 section { background:beige;           }
.theme2 section { background:lightsteelblue;  }
.theme3 section { background:mistyrose;       }
.theme4 section { background:lavender;        }
.mega           { font-size:4em; padding:10%; }
[:style]
_________________________________ class="theme1"

================================ data-xy="0,0"
[div: class="mega"]
<svg>
    <line x1="0" y1="100" x2="50" y2="100"/> 
    <text x="0" y="0" transform="translate(50 100) rotate(-15)"> 
    Slide it !
    </text>
</svg>
[:]

_{sketchit  3.0

   ^  
  <+> 
   v  
}_

vvvvvvvvvvvvvvvv
by DerivationBud
================================
Slideit
^^^^^^^

_## What is it

This is a _*single-file*_ self-contained HTML _/slide-show/_ document. It can be put on a static web server or shared by mail. Graphics are embedded as in-line _*SVG*_, Javascript doesn't require any external libraries. Fonts or bitmaps are embedded as base64 encoded chunks.
So any recent browser should be able to open it.

_## Keys

* _"Spacebar"_ or _"Enter"_ toggles fly mode

* _"P"_ toggles printable/navigable document

_{sketchit 

 +--+     ++ ++ ++
 |  |     ++ ++ ++
 |  | <->
 |  |     ++ ++ ++
 +--+     ++ ++ ++
}_

================================ 
Slideit
^^^^^^^

_## Create

The contents of this presentation can be written using a text editor in various formats:

* pure _*html+css+js*_
* _*markit*_ which is a light-weight html syntax, giving access to the full potential of html5 but easier to write than html
* _*wikit*_ which is a wiki syntax giving access to html5 recent tags such as article, section,header,footer.
* _*sketchit*_ which is a block-diagram generator based on ascii-art
* _*python*_ which is an easy to use scripting language
* Any combination of the above is welcome

The source file(s) is(are) processed by a one step operation to generate the single file presentation.  
_{sketchit 

        edit             run          share
 .---------+   +-----------+   .----------+
 |  doc.mi |-->| markit.py |-->|  doc.html|
 +----^----+   +-----------+   +----------+
      |
      | include
 .----+-----+
 |  stuff.mi|
 +----------+
}_

================================
Slideit
^^^^^^^

_## Install

_### Dependencies
* python interpreter 2.x, I have tried successfully 2.6 and 2.7
* All other dependencies js,html,python are in the project's directory

_### Install

* Install Python2.7.3 if you don't have it already
* Check-out markit folder

_### Quick start

* Goto the _=markit=_ folder
* Edit _=src/mydoc.mi=_ and paste this:
_==
&#95;# My doc
&#42; Hello World !
==_
* _=python markit.py src/mydoc.mi doc/mydoc.html=_
* Navigate to _=file://..../mydoc.html=_


________________________________ class="theme2"

================================ data-xy="1,0"
[div: class="mega"] _= Wikit =_ [:]

vvvvvvvvvvvvvvvv
by DerivationBud
================================ 
Wikit
^^^^^
_## _## heading 1
_### _### heading 2
_#### _#### heading 3
_##### _##### heading 4
_###### _###### heading 5
A word can be _*&#95;*Bold*&#95;*_ or _/&#95;/Italic/&#95;/_ or _= &#95;=Fixed width=&#95; =_

A bullet list: 
* item1 &larr; _= * item1
* item2 &larr; _= * item2
* item3 &larr; _= * item3

================================ 
Wikit
^^^^^
_##Tables
[pre:]
&#124;&#124;&#124;Table &#124;&#124;&#124;Col1 &#124;&#124;&#124;Col2 &#124;&#124;&#124;
&#124;&#124;&#124;Row1  &#124;&#124; ABC  &#124;&#124; DEF  &#124;&#124;
&#124;&#124;&#124;Row2  &#124;&#124; 123  &#124;&#124; 456  &#124;&#124;
[:pre]
|||   Table   ||| Col1 ||| Col2 |||
||    Row1    ||  ABC   ||  DEF  ||
||    Row2    ||  123   ||  456  ||

_##Blocks
Code Blocks delimiters: _= &#95;== xxx ==&#95; =_
_==
for i in range(3):
   print "Hip"
print "Houra"
==_

Quoted block delimiters _= &#95;" xxx "&#95; =_

_"
I am happy !
"_

================================ 
Header
^^^^^^

_## Open new article 
_== ____________ optional attrs ==_

_## Open new section

_== =========== optional attrs ==_

_## Decorate section

_==
 Header
 ^^^^^^
._

_==
 vvvvvv
 Footer
._

vvvvvv
Footer

================================ 
Wikit
^^^^^
_# Style
_==
[[style: scoped]
    .sunset {
    color: darkorange;
    background: lightblue;
    }
[[:style]
[[div: class="sunset"]
&#42;One
&#42;Two 
&#42;Three
[[:]
==_
[style: scoped]
    .sunset {
    color: darkorange;
    background: lightblue;
    }
[:style]
[div: class="sunset"]
* One
* Two 
*Three
[:]
________________________________ class="theme3"
================================ data-xy="2,0"
_{sketchit 0.9



               
                                         .-+
                                         +-+
                                           
 +--@  @  @       @         @            @+@   @
 |     | ++      @+--@      |             |   @+--@ 
 |     | |  +--+  |    +--@ +--+          |    |
 +---+ +-+  |  |  |    |    |  |   @---@  |    |
     | + |  +--+  |    |    |  |          |    |
     | | ++ |     |    |    |  |          |    |
 @---+ @  @ +--@  +--@ +--@ @  @         @+@   +--@
}_
vvvvvvvvvvvvvvvv
by DerivationBud
================================ 
Sketchit
^^^^^^^^
_## Intro
Sketchit is a plugin turning ascii-art into svg

_## Syntax
In this example below, 2 is the scale ( optional).
_==
&#95;{sketchit 2

  A @-> B@-+
  ^        |
  +- C <---+

}&#95;
==_
_## Render
_{sketchit 2

  A @-> B@-+
  ^        |
  +- C <---+
}_
================================ 
Sketchit
^^^^^^^^
_## Lines
Lines made of [code:] | - + [:code] are detected. Groups of 4 lines forming rectangles are drawn as rectangles, all other lines are drawn as separate elements. Special characters [code:] ^ v < > @ [:] are replaced by instances of bubbles and arrows terminators.
_==
                                       A               B
   ------    | ^ | ^ ^ @                 +------------+      @       
             | | | | | |   ---+          |            |      | 
   <-----    | | | | | |      |          |            |   +--v----+
             | | | | | |      +---->     |            |   |       | 
   @---->    | | | | | |      |          |            |   | Hello | 
             | | v v @ v      +---->     +------------+   +-------+      
                                        D              C
==_
_{sketchit 0.75

                                        A              B
   ------    | ^ | ^ ^ @                 +------------+      @       
             | | | | | |   ---+          |            |      |
   <-----    | | | | | |      |          |            |   +--v----+
             | | | | | |      +---->     |            |   |       |
   @---->    | | | | | |      |          |            |   | Hello |
             | | v v @ v      +---->     +------------+   +-------+    
                                        D              C
}_

================================ 
Sketchit
^^^^^^^^
_### Polygons
In the perimeter of a rectangle contains dots, it is considered as a bonding box of a polygon. If only one dot is found an ellipse is drawn, else the dots are connected.

_==
  +--.-----.-+               
  |          |              
  .          .              
  |    Pol   |              
  |        +-+---.------+   
  |        . |          |   
  |        | |          |   
  +---.----+.+          .-> Exit 
           |            |       
           .---------.--+      
==_
_{sketchit 0.75

  +--.-----.-+                  
  |          |                 
  .          .                
  |    Pol   |                  
  |        +-+---.------+       
  |        . |          |       
  |        | |          |       
  +---.----+.+          .-> Exit
           |            |       
           .---------.--+       
}_
================================
Sketchit
^^^^^^^^
Style can be applied, as on any other element.
[wiki:off]
[pre:]
[[style: scoped]
    .mystyle rect {
        fill: rgba(0, 0, 200, 0.8);
        stroke: rgba(100,100,150, 1);
        stroke-linejoin: round;
        stroke-width: 5;
        }
[[:style]
[[div: class="mystyle"]
&#95;{sketchit 0.75

  +----------+                  
  |          |
  +----------+                  

}_
[[:div]
[:pre]
[wiki:on]
[style: scoped]
    .mystyle rect {
        fill: rgba(0, 0, 200, 0.8);
        stroke: rgba(100,100,150, 1);
        stroke-linejoin: round;
        stroke-width: 5;
        }
[:style]
[div: class="mystyle"]

_{sketchit 0.75

  +----------+                  
  |          |
  +----------+                  

}_

================================ 
Sketchit
^^^^^^^^
_##Example
_==
     +--------+ +--------+ +--------+
     | Block1 | | Block2 | | Block3 |
     +-----^--+ +------^-+ +------^-+
           |           |          |
        <--@-----------@----------@-->
            .-+        |          |
        A --> . +------v-+ +------v-+
            | +-> Block6 | | Block7 |
        B --> . +--------+ +--------+
            .-+
==_
_{sketchit

     +--------+ +--------+ +--------+
     | Block1 | | Block2 | | Block3 |
     +-----^--+ +------^-+ +------^-+
           |           |          |
        <--@-----------@----------@-->
            .-+        |          |
        A --> . +------v-+ +------v-+
            | +-> Block6 | | Block7 |
        B --> . +--------+ +--------+
            .-+
}_

================================ 
Sketchit
^^^^^^^^
_##Example
_==
                       +----------+
                   +---+ Feedback <--+
                   |   +----------+  |
                   |                 @-->
   +---------+   .-v-+   +--------+  |
   | Stimuli +---> Op+---> Action +--+
   +---------+   +---+   +--------+
==_
_{sketchit

                       +----------+
                   +---+ Feedback <--+
                   |   +----------+  |
                   |                 @-->
   +---------+   .-v-+   +--------+  |
   | Stimuli +---> Op+---> Action +--+
   +---------+   +---+   +--------+
}_
________________________________ class="theme5" 
================================ data-xy="3,0"
directives
^^^^^^^^^^

[div: class="mega"] [code:]_= &#95;{directives}&#95; =_
[:]

vvvvvvvvvvvvvvvv
by DerivationBud
================================ 
directives
^^^^^^^^^^
_# file inclusion
_==
&#95;{include inc/mystyle.mi }&#95;
==_
* Path is relative to the markit.py engine [:]

_# font embedding
_==
&#95;{embed.font myname fonts/mywebfont.woff }&#95;
[[style:]
html body { font-family:myname,sans-serif;  }
[[:style]
==_

================================ class="bckexample" 
directives
^^^^^^^^^^
_# image as background

_==
&#95;{embed.background .bckexample inc/sky.png }_
==_
_{embed.background .bckexample inc/sky.png }_

_# image embedding
_==
&#95;{embed.image inc/sample.png }_
==_
_{embed.image inc/sample.png }_


================================ 
directives
^^^^^^^^^^
_# In-line python injection
_==
&#95;{py
for _ in range(3):
    print "* Hello"
}&#95;_
==_
_{py
for _ in range(3):
    print "* Hello"
}_
_"Directives are performed before wiki or markit interpretation"_

================================ 
directives
^^^^^^^^^^
_# Custom plugin

* Write a file _=./plugins/myfunc.py=_ containing:
_==
def myfunc(txt):
   msg = "-->"+txt+"<--"
   return msg
_==
* Call from _=./doc_sources/mydoc.mi=_ with syntax:
_==
&#95;{myfunc bla bla
bla bla bla bla }&#95; ==_
* Render in doc _=./doc/mydoc.html=_
_==
--> bla bla
bla bla bla bla<-- ==_

================================ 
directives
^^^^^^^^^^
_# Custom plugin cont'd

* More than one function, can be put in a module
* Call function _=myfunc1=_ from file _=mylib.py=_
_==
&#95;{mylib.myfunc1 bla bla
bla bla bla bla }&#95; ==_

================================ 
directives
^^^^^^^^^^
_# Variables

_==
&#95;{py 
v={}
v["myint"]= 12
v["mystr"]= "ABC"
}_
&#42; My integer equals &#95;{py print v["myint"] }_
&#42; My string equals &#95;{py print v["mystr"] }_

==_

_{py 
v={}
v["myint"]= 12
v["mystr"]= "ABC"
}_

* My integer equals _{py print v["myint"] }_
* My string equals _{py print v["mystr"] }_


________________________________ class="theme4" 
================================ data-xy="4,0"
[div: class="mega"] [[markit:] [:]

vvvvvvvvvvvvvvvv
by DerivationBud
================================ 
Markit
^^^^^^
_# Intro
_*mark-it*_ is something in between mark-down and mark-up. It is a syntax intended to be an intermediate format before conversion into full-blown html/svg. It is easier to read and write by both humans and computers. Possible applications are: 
* Manual writing of html, thanks to a syntax easier to read and to maintain.
* Automatic writing of documents. Generators can post contents, keeping track of open tags and closing them is taken care of by the markit engine.
* Simple mapping of a wiki syntax onto mark-it tags that acts as an intermediate step toward html generation.
_{sketchit 0x0
                          +------+
             +--------+ +-> html |
 +-------+ +-> markit +-+ +------+
 | wiki  +-+ +--------+
 +-------+
}_

=================================
Markit
^^^^^^
_# Basic Syntax 

* Tags can opened and closed: [code:eof] _*[[tag: attributes]*_ contents _*[[:tag]*_ 
* This will be translated into [code:eof] _* &lt;tag attributes&gt;*_ contents _*&lt;/tag&gt;*_

* Tags that have no contents can be written: [code:eof] _* [[tag. attributes] *_  
* This will be translated into [code:eof] _* &lt;tag attributes&gt;&lt;/tag&gt;*_ 


* But most of the magic comes from the fact that tags don't need to be closed manually, i.e. the _*[[:tag]*_ can be omitted and will be added by the markit engine.

=================================
Markit
^^^^^^
_# Autoclose ...
_# On Sibling : [code:] [[tag:]...[[tag:]

* A tag is autoclosed  just before a tag of same type is open.


_{sketchit 0.6
                     |
           +--+   ---+-->
           |x:| def  |
           +--+      |                      
  +--+      ^        |    +--+           +--+
  |x:| abc -+        |    |x:| abc       |:x| def 
  +--+               |    +--+   |  +--+ +--+   
   ^                 |     ^     +->|:x|  ^
  -+                 |    -+        +--+ -+
}_

* Example: [code:] [[li:] item 1 [[li:] item 2 [[:li] [:] ( 1st item is closed by 2sd )

================================
Markit
^^^^^^
_# Autoclose ...
_# On Parent : [code:] [[tag1:][[tag2:]...[[:tag1]

* Open tags are autoclosed just before a parent tag is closed.

_{sketchit 0.6
                         |
          +--+        ---+-->          +--+
          |y:| def       |             |:y| def
          +--+ |         |             +--+ |
 +--+      ^   |         |    +--+      ^   |   +--+
 |x:| abc -+   |         |    |x:| abc -+   +-> |:y|
 +--+          |  +--+   |    +--+              +-++ +--+
  ^            +->|:x|   |     ^                  +->|:x|
 -+               +--+   |    -+                     +--+
}_

* Example: [code:] [[p:] Please welcome [[b:] John [[:p] [:] ( _*b*_ tag is closed by _*p*_ )

================================
Markit
^^^^^^
_# Autoclose 
_# On End of file : [code:] [[tag:]...eof

* Open tags are autoclosed just before the end of file.

_{sketchit 0.6
                         |
          +--+        ---+-->          +---+
          |y:| def       |             |:y | def
          +--+           |             +---+   
 +--+      ^             |    +--+      ^ |   +--+
 |x:| abc -+             |    |x:| abc -+ +-> |:y|
 +--+                    |    +--+            +-++ +--+
  ^            -> (eof)  |     ^                +->|:x| -> (eof)
 -+                      |    -+                   +--+
}_

* Example: [code:] [[html:] [[body:] ... [:] ( _*html*_ and _*body*_ will be closed at the end )

================================
Markit
^^^^^^
_# Autoclose 
_# On End of line [code:] [[tag:eol]...eol

* A tag can schedule to be closed just before end of line.

_{sketchit 0.6
                       |
 +-----+            ---+-->  +--+     
 |x:eol| abc           |     |x:| abc 
 +-----+               |     +--+ |   +--+
  ^          -> (eof)  |      ^   +-> |:x| -> (eof)
 -+                    |     -+       +--+
}_

* Example: [code:] [[h1:eol] my title [:]

================================
Markit
^^^^^^
_# Autoclose 
_# On Blank lines [code:] [[tag:]...eof eof

* A tag can schedule to be closed just before an empty line.

_{sketchit 0.6
                           |
 +-----+                ---+--> +--+     
 |x:nol| abc               |    |x:| abc 
 +-----+                   |    +--+ |   +--+
  ^         -> (eof)(eol)  |     ^   +-> |:x| -> (eol)(eol)
 -+                        |    -+       +--+
}_ 
* Example: [code:] [[ul:nol] [[li:] item1 [[li:] item2 (eol)(eol) [:] ( _*ul*_ list closed by blank line ) 

================================
Markit
^^^^^^
_# Autoclose
_# On Target tag [code:] [[tag:tag2]...[[tag2:]

* A tag can schedule to be closed just before a tag of a specific type is open.

_{sketchit 0.6
                      |
            +--+   ---+-->             
            |y:| def  |                 
            +--+      |                      
  +---+      ^        |   +--+          +--+
  |x:y| abc -+        |   |x:| abc      |y:| def 
  +---+               |   +--+ |   +--+ +^-+   
   ^                  |    ^   +-> |:x+--+ 
  -+                  |   -+       +--+   
}_ 

* Example: [code:] [[head:body] ... [[body:] ... [:] ( _*head*_ is closed by _*body*_ )

================================
Markit
^^^^^^
_# Manual close
_# Any tag [code:] [[:tag]
_# Current tag [code:] [[:]

* Last opened tag can be closed.

_{sketchit 0.6
                |       
 +--+        ---+---> +--+     
 |x:| abc       |     |x:| abc 
 +--+      +-+  |     +--+     +--+
  ^    |   |:|  |      ^   |   |:x|
 -+    +-> +-+  |     -+   +-> +--+
}_
* Example: [code:] [[div:][[p:]][[b:][[:][[:][[:]

================================
Markit
^^^^^^
_# No autoclose [code:] [[tag:noa]

* Sibling autoclose can be disabled.

_{sketchit 0.6
                                 | 
             +--+             ---+-->        +--+                      
             |x:| def            |           |x:| def                  
             +--+                |           +--+                      
 +-----+      ^   |   +--+       |  +--+      ^   |   +--+         
 |x:noa| abc -+   +-> |:x|       |  |x:| abc -+   +-> |:x|         
 +-----+              +--+  +--+ |  +--+              +--+  +--+
  ^                     |   |:x| |   ^                  |   |:x|
 -+                     +-> +--+ |  -+                  +-> +--+
}_

* Example: [code:] [[div:noa id="indented"][[div:] abc [[div:] def [[:][[:]

================================
Markit
^^^^^^
_#Example

[table:]
[tr:eol][th:] Markit [th:] HTML [th:] Render  
[tr:][td: width="20%"][pre:]
[[ul:nol]
[[li:] item1
[[li:] item2
[[li:] item2  

[td: width="20%"][pre:]
&lt;ul&gt;
&lt;li&gt; item1
&lt;/li&gt;&lt;li&gt; item2
&lt;/li&gt;&lt;li&gt; item3
&lt;/li&gt;&lt;/ul&gt;
[td: width="20%"]
<ul>
<li> item1
</li><li> item2
</li><li> item3
</li></ul>
[:table]

_#Explaination
* the first 2 &lt;li&gt; elements are autoclosed on siblings.
* the &lt;ul&gt; element is autoclosed because of the blank line.
* the 3rd &lt;li&gt; element is autoclosed because of parent closing.


